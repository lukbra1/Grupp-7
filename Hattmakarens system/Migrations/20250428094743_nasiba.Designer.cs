// <auto-generated />
using System;
using Hattmakarens_system.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hattmakarens_system.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428094743_nasiba")]
    partial class nasiba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.FraktSedel", b =>
                {
                    b.Property<int>("FraktSedelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FraktSedelId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avsändare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Beskrivning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExportKod")
                        .HasColumnType("int");

                    b.Property<double>("Moms")
                        .HasColumnType("float");

                    b.Property<string>("Mottagare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrisInkMoms")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SkapatDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vikt")
                        .HasColumnType("int");

                    b.Property<decimal>("Värde")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FraktSedelId");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.ToTable("Fraktsedlar");

                    b.HasData(
                        new
                        {
                            FraktSedelId = 1,
                            Adress = "Gatan 1",
                            Avsändare = "Otto AB",
                            Beskrivning = "Hatt",
                            ExportKod = 100,
                            Moms = 25.0,
                            Mottagare = "Bob",
                            OrderID = 1,
                            PrisInkMoms = 1000m,
                            SkapatDatum = new DateTime(2025, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vikt = 2,
                            Värde = 800m
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.Kund", b =>
                {
                    b.Property<int>("KundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fornamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TelefonNr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KundId");

                    b.ToTable("Kunder");

                    b.HasData(
                        new
                        {
                            KundId = 1,
                            Adress = "Gatan 1",
                            Aktiv = true,
                            Efternamn = "Andersson",
                            Epost = "anna@example.com",
                            Fornamn = "Anna",
                            TelefonNr = "0701234567"
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enhet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Farg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrisPerEnhet")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaterialId");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            Beskrivning = "Fjädrar kan användas för att lägga till dekoration eller ge en hatt en speciell stil. Fjädrarna kan komma från fåglar som strutsar, påfåglar eller höns.",
                            Enhet = "st",
                            Farg = "Blå",
                            Namn = "Fjädrar",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 2,
                            Beskrivning = "Tygblommor kan användas för att ge en hatt en feminin och romantisk stil.",
                            Enhet = "st",
                            Farg = "Svart",
                            Namn = "Tygblommor",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 3,
                            Beskrivning = "Pärlor kan användas för att lägga till en elegant och sofistikerad touch till en hatt.",
                            Enhet = "st",
                            Farg = "Vit",
                            Namn = "Pärlor",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 4,
                            Beskrivning = "Tråd producerad av lejonman utav högsta kvalité direkt från Arkenzoo.",
                            Enhet = "g",
                            Farg = "Sunsetred",
                            Namn = "Lejonman",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 5,
                            Beskrivning = "Spetsar kan användas för att lägga till en vintage känsla till en hatt.",
                            Enhet = "st",
                            Farg = "Blå",
                            Namn = "Spets",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 6,
                            Beskrivning = "Lackerat papper kan användas för att skapa en högteknologisk eller futuristisk stil till en hatt.",
                            Enhet = "Kvdm",
                            Farg = "Lila",
                            Namn = "Lackerat papper",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 7,
                            Beskrivning = "Lurextråd kan användas för att lägga till en glittrig och festlig touch till en hatt.",
                            Enhet = "dm",
                            Farg = "Svart",
                            Namn = "Lurextråd",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 8,
                            Beskrivning = ": Fuskpäls kan användas för att ge en hatt en mjuk och fluffig yta, eller för att skapa en djurisk känsla.",
                            Enhet = "Kvdm",
                            Farg = "Svart/Vit-mönstrad",
                            Namn = "Fuskpäls",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 17,
                            Beskrivning = "Bomull är ett mjukt, lätt och andningsbart material som är enkelt att arbeta med. Det används ofta för att tillverka tyghattar, som till exempel kepsar eller basebollmössor.",
                            Enhet = "Kvdm",
                            Farg = "Vit",
                            Namn = "Bomull",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 18,
                            Beskrivning = "Linne är ett lätt och luftigt material som passar bra för sommarhattar, eftersom det är andningsbart och absorberar fukt.",
                            Enhet = "Kvdm",
                            Farg = "Kräm vit",
                            Namn = "Linne",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 19,
                            Beskrivning = "Ull är ett varmt och isolerande material som passar bra för höst- och vinterhattar, som till exempel mössor och hattar med öronlappar.",
                            Enhet = "Kvdm",
                            Farg = "Svart/Vit-mönstrad",
                            Namn = "Ull",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 20,
                            Beskrivning = "Silke är ett mjukt och glansigt material som passar bra för eleganta hattar, som till exempel brudhattar eller aftonhattar.",
                            Enhet = "Kvdm",
                            Farg = "Silver",
                            Namn = "Silke",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 21,
                            Beskrivning = "Satin är ett mjukt och glansigt material som passar bra för dekorativa detaljer på hattar, som till exempel band eller blommor.",
                            Enhet = "Kvdm",
                            Farg = "Beige",
                            Namn = "Satin",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 22,
                            Beskrivning = "Tweed är ett tjockt och varmt material som passar bra för höst- och vinterhattar.",
                            Enhet = "Kvdm",
                            Farg = "Grön",
                            Namn = "Tweed",
                            PrisPerEnhet = 0m
                        },
                        new
                        {
                            MaterialId = 23,
                            Beskrivning = ": Polyester är ett tåligt och lätt material som passar bra för sportiga hattar, som till exempel kepsar eller solhattar.",
                            Enhet = "Kvdm",
                            Farg = "Vit",
                            Namn = "Polyester",
                            PrisPerEnhet = 0m
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.MaterialOrderrad", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("OrderRadId")
                        .HasColumnType("int");

                    b.Property<int>("AntalMaterial")
                        .HasColumnType("int");

                    b.Property<bool>("Bestallt")
                        .HasColumnType("bit");

                    b.HasKey("MaterialId", "OrderRadId");

                    b.HasIndex("OrderRadId");

                    b.ToTable("MaterialOrderrader");

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            OrderRadId = 1,
                            AntalMaterial = 0,
                            Bestallt = false
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.Material_Modell", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("ModellId")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "ModellId");

                    b.HasIndex("ModellId");

                    b.ToTable("MaterialModeller");

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            ModellId = 1
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.Modell", b =>
                {
                    b.Property<int>("ModellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModellId"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Tillganglig")
                        .HasColumnType("bit");

                    b.HasKey("ModellId");

                    b.ToTable("Modeller");

                    b.HasData(
                        new
                        {
                            ModellId = 1,
                            Beskrivning = "En klassisk hatt",
                            Namn = "Studentmössa",
                            Pris = 500m,
                            Tillganglig = true
                        },
                        new
                        {
                            ModellId = 2,
                            Beskrivning = "En doktormössa",
                            Namn = "Doktormössa",
                            Pris = 400m,
                            Tillganglig = true
                        },
                        new
                        {
                            ModellId = 3,
                            Beskrivning = "En oktoberhatt",
                            Namn = "Oktoberhatt",
                            Pris = 1000m,
                            Tillganglig = true
                        },
                        new
                        {
                            ModellId = 4,
                            Beskrivning = "En fez hatt",
                            Namn = "Fez hatt",
                            Pris = 300m,
                            Tillganglig = true
                        },
                        new
                        {
                            ModellId = 5,
                            Beskrivning = "En Sherlock hatt",
                            Namn = "Sherlock hatt",
                            Pris = 1200m,
                            Tillganglig = true
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<bool>("Express")
                        .HasColumnType("bit");

                    b.Property<int?>("FraktSedelId")
                        .HasColumnType("int");

                    b.Property<int?>("KundId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Skapad")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPris")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("KundId");

                    b.ToTable("Ordrar");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Express = false,
                            KundId = 1,
                            Skapad = new DateTime(2025, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            TotalPris = 1000m
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.OrderRad", b =>
                {
                    b.Property<int>("OrderRadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderRadId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("OrderTyp")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("StatusOrderrad")
                        .HasColumnType("int");

                    b.Property<int>("Storlek")
                        .HasColumnType("int");

                    b.Property<bool>("TilldeladOrder")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TilldelningsDatum")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Tillverkad")
                        .HasColumnType("bit");

                    b.Property<int>("TypEnum")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("pris")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderRadId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orderrader");

                    b.HasDiscriminator<string>("OrderTyp").HasValue("OrderRad");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("Behorighet")
                        .HasColumnType("bit");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Losenord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Behorighet = true,
                            Epost = "admin@example.com",
                            Losenord = "admin123",
                            Namn = "Admin"
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.LagerOrderrad", b =>
                {
                    b.HasBaseType("Hattmakarens_system.ModelsNy.OrderRad");

                    b.Property<int>("ModellId")
                        .HasColumnType("int");

                    b.HasIndex("ModellId");

                    b.HasDiscriminator().HasValue("Lager");

                    b.HasData(
                        new
                        {
                            OrderRadId = 1,
                            OrderId = 1,
                            StatusOrderrad = 0,
                            Storlek = 0,
                            TilldeladOrder = false,
                            Tillverkad = false,
                            TypEnum = 0,
                            UserId = 1,
                            ModellId = 1
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.SpecialOrderrad", b =>
                {
                    b.HasBaseType("Hattmakarens_system.ModelsNy.OrderRad");

                    b.Property<string>("Kommentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referensbild")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Special");
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.FraktSedel", b =>
                {
                    b.HasOne("Hattmakarens_system.ModelsNy.Order", "Order")
                        .WithOne("FraktSedel")
                        .HasForeignKey("Hattmakarens_system.ModelsNy.FraktSedel", "OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.MaterialOrderrad", b =>
                {
                    b.HasOne("Hattmakarens_system.ModelsNy.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.ModelsNy.OrderRad", "OrderRad")
                        .WithMany()
                        .HasForeignKey("OrderRadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("OrderRad");
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.Material_Modell", b =>
                {
                    b.HasOne("Hattmakarens_system.ModelsNy.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.ModelsNy.Modell", "Modell")
                        .WithMany()
                        .HasForeignKey("ModellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Modell");
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.Order", b =>
                {
                    b.HasOne("Hattmakarens_system.ModelsNy.Kund", "Kund")
                        .WithMany()
                        .HasForeignKey("KundId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Kund");
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.OrderRad", b =>
                {
                    b.HasOne("Hattmakarens_system.ModelsNy.Order", "Order")
                        .WithMany("OrderRader")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.ModelsNy.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.LagerOrderrad", b =>
                {
                    b.HasOne("Hattmakarens_system.ModelsNy.Modell", "Modell")
                        .WithMany()
                        .HasForeignKey("ModellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modell");
                });

            modelBuilder.Entity("Hattmakarens_system.ModelsNy.Order", b =>
                {
                    b.Navigation("FraktSedel");

                    b.Navigation("OrderRader");
                });
#pragma warning restore 612, 618
        }
    }
}
