// <auto-generated />
using System;
using Hattmakarens_system.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hattmakarens_system.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250410125408_FixPendingChanges")]
    partial class FixPendingChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hattmakarens_system.Models.Anpassning", b =>
                {
                    b.Property<int>("AnpassningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnpassningId"));

                    b.Property<decimal>("Anpassningkostnad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderRadId")
                        .HasColumnType("int");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Varde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnpassningId");

                    b.HasIndex("OrderRadId");

                    b.ToTable("Anpassningar");

                    b.HasData(
                        new
                        {
                            AnpassningId = 1,
                            Anpassningkostnad = 100m,
                            OrderRadId = 1,
                            Typ = "Färg",
                            Varde = "Röd"
                        },
                        new
                        {
                            AnpassningId = 2,
                            Anpassningkostnad = 150m,
                            OrderRadId = 2,
                            Typ = "Storlek",
                            Varde = "L"
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Frakt", b =>
                {
                    b.Property<int>("FraktId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FraktId"));

                    b.Property<int>("ExportKod")
                        .HasColumnType("int");

                    b.Property<double>("Moms")
                        .HasColumnType("float");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrisInkMoms")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SkapatDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vikt")
                        .HasColumnType("int");

                    b.Property<decimal>("Värde")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FraktId");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.ToTable("Frakter");

                    b.HasData(
                        new
                        {
                            FraktId = 1,
                            ExportKod = 100,
                            Moms = 25.0,
                            OrderID = 1,
                            PrisInkMoms = 625m,
                            SkapatDatum = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vikt = 2,
                            Värde = 500m
                        },
                        new
                        {
                            FraktId = 2,
                            ExportKod = 200,
                            Moms = 25.0,
                            OrderID = 2,
                            PrisInkMoms = 875m,
                            SkapatDatum = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vikt = 3,
                            Värde = 700m
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.HattModellMaterial", b =>
                {
                    b.Property<int>("HattModellId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<decimal>("Mangd")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HattModellId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("HattModellMaterial");

                    b.HasData(
                        new
                        {
                            HattModellId = 1,
                            MaterialId = 1,
                            Mangd = 1.5m
                        },
                        new
                        {
                            HattModellId = 2,
                            MaterialId = 2,
                            Mangd = 2.0m
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Hattmodell", b =>
                {
                    b.Property<int>("HattModellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HattModellId"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Tillgangliga")
                        .HasColumnType("bit");

                    b.HasKey("HattModellId");

                    b.ToTable("Hattmodeller");

                    b.HasData(
                        new
                        {
                            HattModellId = 1,
                            Beskrivning = "En klassisk hatt",
                            Namn = "Klassisk",
                            Pris = 500m,
                            Tillgangliga = true
                        },
                        new
                        {
                            HattModellId = 2,
                            Beskrivning = "En modern hatt",
                            Namn = "Modern",
                            Pris = 750m,
                            Tillgangliga = true
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Kund", b =>
                {
                    b.Property<int>("KundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<string>("EfterNamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ForNamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KundId");

                    b.ToTable("Kunder");

                    b.HasData(
                        new
                        {
                            KundId = 1,
                            Adress = "Gatan 1",
                            Aktiv = true,
                            EfterNamn = "Andersson",
                            Epost = "anna@example.com",
                            ForNamn = "Anna",
                            Telefon = "0701234567"
                        },
                        new
                        {
                            KundId = 2,
                            Adress = "Vägen 2",
                            Aktiv = true,
                            EfterNamn = "Eriksson",
                            Epost = "erik@example.com",
                            ForNamn = "Erik",
                            Telefon = "0707654321"
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialId");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            Beskrivning = "Mjukt material",
                            Namn = "Filt"
                        },
                        new
                        {
                            MaterialId = 2,
                            Beskrivning = "Lyxigt material",
                            Namn = "Siden"
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Express")
                        .HasColumnType("bit");

                    b.Property<int>("FraktId")
                        .HasColumnType("int");

                    b.Property<int>("KundId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalPris")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("KundId");

                    b.ToTable("Ordrar");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Datum = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Express = false,
                            FraktId = 0,
                            KundId = 1,
                            Status = 0,
                            TotalPris = 1000
                        },
                        new
                        {
                            OrderId = 2,
                            Datum = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Express = true,
                            FraktId = 0,
                            KundId = 2,
                            Status = 1,
                            TotalPris = 1500
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.OrderMaterialStatus", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<bool>("Bestallt")
                        .HasColumnType("bit");

                    b.HasKey("OrderId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Materialstatusar");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            MaterialId = 1,
                            Bestallt = true
                        },
                        new
                        {
                            OrderId = 2,
                            MaterialId = 2,
                            Bestallt = false
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.OrderRad", b =>
                {
                    b.Property<int>("OrderRadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderRadId"));

                    b.Property<int>("HattModellId")
                        .HasColumnType("int");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferensBild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Typ")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderRadId");

                    b.HasIndex("HattModellId");

                    b.HasIndex("UserId");

                    b.ToTable("Orderrader");

                    b.HasData(
                        new
                        {
                            OrderRadId = 1,
                            HattModellId = 1,
                            Pris = 1000m,
                            Typ = 0,
                            UserId = 1
                        },
                        new
                        {
                            OrderRadId = 2,
                            HattModellId = 2,
                            Pris = 1500m,
                            Typ = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.SpecialHattDetaljer", b =>
                {
                    b.Property<int>("SpecialHattId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialHattId"));

                    b.Property<string>("Dekoration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Farg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fjader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderRadId")
                        .HasColumnType("int");

                    b.Property<string>("Storlek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tyg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialHattId");

                    b.HasIndex("OrderRadId")
                        .IsUnique();

                    b.ToTable("SpecialHattar");

                    b.HasData(
                        new
                        {
                            SpecialHattId = 1,
                            Dekoration = "Fjäder",
                            ExtraMaterial = "Snöre",
                            Farg = "Blå",
                            Fjader = "Svart",
                            Kommentar = "Ingen",
                            Modell = "Klassisk",
                            OrderRadId = 1,
                            Storlek = "M",
                            Text = "Initialer",
                            Tyg = "Filt"
                        },
                        new
                        {
                            SpecialHattId = 2,
                            Dekoration = "Ros",
                            ExtraMaterial = "Spänne",
                            Farg = "Grön",
                            Fjader = "Vit",
                            Kommentar = "Snabb leverans",
                            Modell = "Modern",
                            OrderRadId = 2,
                            Storlek = "L",
                            Text = "Logo",
                            Tyg = "Siden"
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Tillverkningsschema", b =>
                {
                    b.Property<int>("SchemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchemaId"));

                    b.Property<int>("OrderRadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Startdatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SchemaId");

                    b.HasIndex("OrderRadId");

                    b.HasIndex("UserId");

                    b.ToTable("Tillverkningsscheman");

                    b.HasData(
                        new
                        {
                            SchemaId = 1,
                            OrderRadId = 1,
                            Startdatum = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Ej startad",
                            UserId = 1
                        },
                        new
                        {
                            SchemaId = 2,
                            OrderRadId = 2,
                            Startdatum = new DateTime(2025, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Startad",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("Behorighet")
                        .HasColumnType("bit");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LosenordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Behorighet = true,
                            Epost = "admin@example.com",
                            LosenordHash = "hash1",
                            Namn = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Behorighet = false,
                            Epost = "medarbetare@example.com",
                            LosenordHash = "hash2",
                            Namn = "Medarbetare"
                        });
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Anpassning", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderRadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Frakt", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Order", "Order")
                        .WithOne("Frakt")
                        .HasForeignKey("Hattmakarens_system.Models.Frakt", "OrderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.HattModellMaterial", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Hattmodell", "Hattmodell")
                        .WithMany("Material")
                        .HasForeignKey("HattModellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.Material", "Material")
                        .WithMany("HattModeller")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hattmodell");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Order", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Kund", "Kund")
                        .WithMany()
                        .HasForeignKey("KundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kund");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.OrderMaterialStatus", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Material", "Material")
                        .WithMany("OrderStatus")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.OrderRad", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Hattmodell", "Hattmodell")
                        .WithMany("Orderrader")
                        .HasForeignKey("HattModellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hattmodell");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.SpecialHattDetaljer", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.OrderRad", "OrderRad")
                        .WithOne()
                        .HasForeignKey("Hattmakarens_system.Models.SpecialHattDetaljer", "OrderRadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderRad");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Tillverkningsschema", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.OrderRad", "OrderRad")
                        .WithMany()
                        .HasForeignKey("OrderRadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderRad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Hattmodell", b =>
                {
                    b.Navigation("Material");

                    b.Navigation("Orderrader");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Material", b =>
                {
                    b.Navigation("HattModeller");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Order", b =>
                {
                    b.Navigation("Frakt")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
