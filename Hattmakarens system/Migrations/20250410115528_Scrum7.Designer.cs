// <auto-generated />
using System;
using Hattmakarens_system.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hattmakarens_system.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250410115528_Scrum7")]
    partial class Scrum7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hattmakarens_system.Models.Anpassning", b =>
                {
                    b.Property<int>("AnpassningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnpassningId"));

                    b.Property<decimal>("Anpassningkostnad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderRadId")
                        .HasColumnType("int");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Varde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnpassningId");

                    b.HasIndex("OrderRadId");

                    b.ToTable("Anpassningar");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Frakt", b =>
                {
                    b.Property<int>("FraktId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FraktId"));

                    b.Property<int>("ExportKod")
                        .HasColumnType("int");

                    b.Property<double>("Moms")
                        .HasColumnType("float");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrisInkMoms")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SkapatDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vikt")
                        .HasColumnType("int");

                    b.Property<decimal>("Värde")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FraktId");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.ToTable("Frakter");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.HattModellMaterial", b =>
                {
                    b.Property<int>("HattModellId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<decimal>("Mangd")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HattModellId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("HattModellMaterial");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Hattmodell", b =>
                {
                    b.Property<int>("HattModellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HattModellId"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Tillgangliga")
                        .HasColumnType("bit");

                    b.HasKey("HattModellId");

                    b.ToTable("Hattmodeller");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Kund", b =>
                {
                    b.Property<int>("KundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<string>("EfterNamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ForNamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KundId");

                    b.ToTable("Kunder");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialId");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Express")
                        .HasColumnType("bit");

                    b.Property<int>("FraktId")
                        .HasColumnType("int");

                    b.Property<int>("FraktId1")
                        .HasColumnType("int");

                    b.Property<int>("KundId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalPris")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("FraktId1");

                    b.HasIndex("KundId");

                    b.ToTable("Ordrar");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.OrderMaterialStatus", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<bool>("Bestallt")
                        .HasColumnType("bit");

                    b.HasKey("OrderId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Materialstatusar");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.OrderRad", b =>
                {
                    b.Property<int>("OrderRadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderRadId"));

                    b.Property<string>("HattModellId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HattModellId1")
                        .HasColumnType("int");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferensBild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Typ")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderRadId");

                    b.HasIndex("HattModellId1");

                    b.HasIndex("UserId");

                    b.ToTable("Orderrader");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.SpecialHattDetaljer", b =>
                {
                    b.Property<int>("SpecialHattId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialHattId"));

                    b.Property<string>("Dekoration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Farg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fjader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderRadId")
                        .HasColumnType("int");

                    b.Property<string>("Storlek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tyg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialHattId");

                    b.HasIndex("OrderRadId")
                        .IsUnique();

                    b.ToTable("SpecialHattar");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Tillverkningsschema", b =>
                {
                    b.Property<int>("SchemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchemaId"));

                    b.Property<int>("OrderRadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Startdatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SchemaId");

                    b.HasIndex("OrderRadId");

                    b.HasIndex("UserId");

                    b.ToTable("Tillverkningsscheman");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("Behorighet")
                        .HasColumnType("bit");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LosenordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Anpassning", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderRadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Frakt", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Order", "Order")
                        .WithOne()
                        .HasForeignKey("Hattmakarens_system.Models.Frakt", "OrderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.HattModellMaterial", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Hattmodell", "Hattmodell")
                        .WithMany("Material")
                        .HasForeignKey("HattModellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.Material", "Material")
                        .WithMany("HattModeller")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hattmodell");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Order", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Frakt", "Frakt")
                        .WithMany()
                        .HasForeignKey("FraktId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.Kund", "Kund")
                        .WithMany()
                        .HasForeignKey("KundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Frakt");

                    b.Navigation("Kund");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.OrderMaterialStatus", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Material", "Material")
                        .WithMany("OrderStatus")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.OrderRad", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.Hattmodell", "Hattmodell")
                        .WithMany("Orderrader")
                        .HasForeignKey("HattModellId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hattmodell");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.SpecialHattDetaljer", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.OrderRad", "OrderRad")
                        .WithOne()
                        .HasForeignKey("Hattmakarens_system.Models.SpecialHattDetaljer", "OrderRadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderRad");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Tillverkningsschema", b =>
                {
                    b.HasOne("Hattmakarens_system.Models.OrderRad", "OrderRad")
                        .WithMany()
                        .HasForeignKey("OrderRadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hattmakarens_system.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderRad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Hattmodell", b =>
                {
                    b.Navigation("Material");

                    b.Navigation("Orderrader");
                });

            modelBuilder.Entity("Hattmakarens_system.Models.Material", b =>
                {
                    b.Navigation("HattModeller");

                    b.Navigation("OrderStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
